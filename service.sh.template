#!/bin/bash

DEBUG=false

BUNDLE_DIR='INSTALL_PATH/xmppserverui/bin'
CONFIG_DIR='INSTALL_PATH/xmppserverui/gunicorn_conf.py'
XMPP_SERVER_CTL_DIR='INSTALL_PATH/bin'
XMPP_SERVER_CONFIG_FILE='INSTALL_PATH/etc/ejabberd/ejabberd.yml'
LOG_FILE_DIR='gunicorn'
PID_FILE='INSTALL_PATH/xabber_server.pid'

ERROR_TEXT='\033[0;31m'
SUCCESS_TEXT='\033[0;32m'
NORMAL_TEXT='\033[0m'
CERT_FILE='INSTALL_PATH/certs/server.pem'
GUNICORN_SSL_KEY=''

if [[ -f $CERT_FILE ]]; then
  GUNICORN_SSL_KEY="--certfile=$CERT_FILE"
fi

if $DEBUG ; then 
  echo "DEBUG"
  BUNDLE_DIR='bin'
  XMPP_SERVER_CTL_DIR=''
  XMPP_SERVER_CONFIG_FILE=''
  CONFIG_DIR='gunicorn_conf.py'
  PID_FILE='xabber_server.pid'
fi


function run_server() {
  if pgrep -f "$BUNDLE_DIR/gunicorn xmppserverui.wsgi:application" > /dev/null 2>&1; then
    echo "Xabber server already running"
  else
    if $DEBUG ; then
      $BUNDLE_DIR/gunicorn xmppserverui.wsgi:application $GUNICORN_SSL_KEY -c $CONFIG_DIR --log-file $LOG_FILE_DIR/error.log --access-logfile $LOG_FILE_DIR/access.log --log-level debug --pid $PID_FILE
    else
      $BUNDLE_DIR/gunicorn xmppserverui.wsgi:application $GUNICORN_SSL_KEY -c $CONFIG_DIR --pid $PID_FILE
    fi
    for (( i = 0; i < 10; i++ )); do
        if [[ -f "$PID_FILE" ]]; then
            if [[ -f "$XMPP_SERVER_CONFIG_FILE" ]]; then
              echo "Web console run at http://yourdomain.com:8000 or http://your_ip:8000"
            else
              echo "Welcome to Xabber server.
To continue installation process, open http://yourdomain.com:8000 or http://your_ip:8000"
            fi
            exit 0
          fi
        sleep 1
    done
    echo "Cant run Xabber server"
  fi
}

function start_service() {
  run_server
}

function stop_service() {
  if [[ -f "$PID_FILE" ]]; then
    echo "Stopping service"
    $XMPP_SERVER_CTL_DIR/ejabberdctl stop > /dev/null 2>&1 && $XMPP_SERVER_CTL_DIR/ejabberdctl stopped > /dev/null 2>&1
    kill -TERM $(cat $PID_FILE)
  else
    echo "Server already stopped"
  fi
}

function restart_service() {
  stop_service && run_server
}

function status_service() {
  if $XMPP_SERVER_CTL_DIR/ejabberdctl status > /dev/null 2>&1; then
    echo -e "XMPP server status: ${SUCCESS_TEXT}running${NORMAL_TEXT}"
  else
    echo -e "XMPP server status: ${ERROR_TEXT}stopped${NORMAL_TEXT}"
  fi
  if pgrep -f "$BUNDLE_DIR/gunicorn xmppserverui.wsgi:application" > /dev/null 2>&1; then
    echo -e "Web console status: ${SUCCESS_TEXT}running${NORMAL_TEXT}"
  else
    echo -e "Web console status: ${ERROR_TEXT}stopped${NORMAL_TEXT}"
  fi
}

case $1 in
  start)
  start_service;;
  stop)
  stop_service;;
  restart)
  restart_service;;
  status)
  status_service;;
  *)
  echo "
Xabber Server
Version: 0.9

Manage commands list:
  start       Start a xabber server
  stop        Stop a xabber server
  restart     Reload a xabber server
  status      Check status of xabber server instance
  ";;
esac
